<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>com.example.demo.services</groupId>
        <artifactId>customer-demo</artifactId>
        <version>0.0.1-SNAPSHOT</version>
        <relativePath>../pom.xml</relativePath> <!-- lookup parent from repository -->
    </parent>
    <artifactId>customer-demo-api</artifactId>
    <name>customer-demo-api</name>
    <description>Demo project for Spring Boot</description>
    <packaging>jar</packaging>

    <properties>
        <demo.artifacts.repository.path>
            ${settings.localRepository}/nl/rabobank/gict/le/lza/services
        </demo.artifacts.repository.path>
        <account-demo-stub.artifact.id>account-demo-stub</account-demo-stub.artifact.id>
        <demo-stub.artifact.version>${project.parent.version}</demo-stub.artifact.version>
        <account-demo-stub.artifact.name>
            ${account-demo-stub.artifact.id}-${demo-stub.artifact.version}.jar
        </account-demo-stub.artifact.name>
        <account-demo-stub.artifact.systemPath>
            ${demo.artifacts.repository.path}/${account-demo-stub.artifact.id}/${demo-stub.artifact.version}/${account-demo-stub.artifact.name}
        </account-demo-stub.artifact.systemPath>

        <demo-stub.server.url>http://localhost</demo-stub.server.url>
        <account-demo-stub.server.port>49152</account-demo-stub.server.port>
        <account-demo-stub.host.url>
            ${demo-stub.server.url}:${account-demo-stub.server.port}
        </account-demo-stub.host.url>
        <account-demo-stub.health-check.url>
            ${account-demo-stub.host.url}/actuator/health
        </account-demo-stub.health-check.url>
    </properties>

    <dependencies>
        <!-- internal library dependencies -->
        <dependency>
            <groupId>${project.parent.groupId}</groupId>
            <artifactId>${account-demo-stub.artifact.id}</artifactId>
            <version>${demo-stub.artifact.version}</version>
            <scope>test</scope>
        </dependency>

        <!-- spring framework dependencies -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-actuator</artifactId>
            <version>${spring-boot.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-validation</artifactId>
            <version>${spring-boot.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-jpa</artifactId>
            <version>${spring-boot.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
            <version>${spring-boot.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-webflux</artifactId>
            <version>${spring-boot.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web-services</artifactId>
            <version>${spring-boot.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.data</groupId>
            <artifactId>spring-data-envers</artifactId>
            <version>${spring-boot.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.data</groupId>
            <artifactId>spring-data-rest-hal-explorer</artifactId>
            <version>${spring-data-rest-hal-explorer.version}</version>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-devtools</artifactId>
            <version>${spring-boot.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.data</groupId>
            <artifactId>spring-data-rest-hal-browser</artifactId>
            <version>${spring-data-rest-hal-browser.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.plugin</groupId>
            <artifactId>spring-plugin-core</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <version>${spring-boot.version}</version>
        </dependency>

        <!-- external main dependencies -->
        <dependency>
            <groupId>io.springfox</groupId>
            <artifactId>springfox-swagger2</artifactId>
        </dependency>
        <dependency>
            <groupId>io.swagger.codegen.v3</groupId>
            <artifactId>swagger-codegen</artifactId>
        </dependency>
        <dependency>
            <groupId>org.openapitools</groupId>
            <artifactId>openapi-generator</artifactId>
        </dependency>
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
        </dependency>
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok-utils</artifactId>
        </dependency>
        <dependency>
            <groupId>org.mapstruct</groupId>
            <artifactId>mapstruct</artifactId>
        </dependency>
        <dependency>
            <groupId>org.mapstruct</groupId>
            <artifactId>mapstruct-jdk8</artifactId>
        </dependency>
        <dependency>
            <groupId>org.mapstruct</groupId>
            <artifactId>mapstruct-processor</artifactId>
        </dependency>
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok-mapstruct-binding</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
        </dependency>
        <dependency>
            <groupId>commons-validator</groupId>
            <artifactId>commons-validator</artifactId>
        </dependency>
        <dependency>
            <groupId>io.projectreactor.netty</groupId>
            <artifactId>reactor-netty</artifactId>
        </dependency>
        <dependency>
            <groupId>com.h2database</groupId>
            <artifactId>h2</artifactId>
        </dependency>
        <dependency>
            <groupId>org.zalando</groupId>
            <artifactId>problem-spring-web-starter</artifactId>
        </dependency>

        <!-- external test dependencies -->
        <dependency>
            <groupId>org.projectlombok.test</groupId>
            <artifactId>test-maven-lombok</artifactId>
        </dependency>
        <dependency>
            <groupId>nl.jqno.equalsverifier</groupId>
            <artifactId>equalsverifier</artifactId>
        </dependency>
        <dependency>
            <groupId>com.intuit.karate</groupId>
            <artifactId>karate-apache</artifactId>
        </dependency>
        <dependency>
            <groupId>com.intuit.karate</groupId>
            <artifactId>karate-junit5</artifactId>
        </dependency>
        <dependency>
            <groupId>net.masterthought</groupId>
            <artifactId>cucumber-reporting</artifactId>
        </dependency>
    </dependencies>

    <build>
        <finalName>${project.name}</finalName>

        <plugins>
            <!-- spring framework plugins -->
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>

            <!-- external main plugins -->
            <plugin>
                <groupId>org.jvnet.jaxb2.maven2</groupId>
                <artifactId>maven-jaxb2-plugin</artifactId>
                <configuration>
                    <schemaLanguage>wsdl</schemaLanguage>
                    <schemaDirectory>${project.basedir}/src/main/resources/ws/</schemaDirectory>
                    <schemaIncludes>
                        <include>**/*.wsdl</include>
                    </schemaIncludes>
                    <removeOldOutput>true</removeOldOutput>
                    <verbose>true</verbose>
                    <extension>true</extension>
                </configuration>
                <executions>
                    <execution>
                        <id>jaxb2-generate-sources</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>io.swagger.codegen.v3</groupId>
                <artifactId>swagger-codegen-maven-plugin</artifactId>
                <configuration>
                    <skip>true</skip>
                    <inputSpec>
                        ${project.basedir}/src/main/resources/api/customer-accounts-demo-swagger.yml
                    </inputSpec>
                    <ignoreFileOverride>${project.basedir}/.swagger-codegen-ignore</ignoreFileOverride>
                    <generateSupportingFiles>false</generateSupportingFiles>
                    <language>spring</language>
                    <invokerPackage>${project.groupId}.customer</invokerPackage>
                    <apiPackage>${project.groupId}.customer.api</apiPackage>
                    <modelPackage>${project.groupId}.customer.web</modelPackage>
                    <configOptions>
                        <hideGenerationTimestamp>true</hideGenerationTimestamp>
                        <serializableModel>true</serializableModel>
                        <interfaceOnly>true</interfaceOnly>
                        <basePackage>${project.groupId}.customer</basePackage>
                    </configOptions>
                </configuration>
                <executions>
                    <execution>
                        <id>swagger-generate-sources</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.openapitools</groupId>
                <artifactId>openapi-generator-maven-plugin</artifactId>
                <configuration>
                    <skip>true</skip>
                    <inputSpec>
                        ${project.basedir}/src/main/resources/api/customer-accounts-demo-openapi.yml
                    </inputSpec>
                    <ignoreFileOverride>${project.basedir}/.openapi-generator-ignore</ignoreFileOverride>
                    <supportingFilesToGenerate>ApiUtil.java</supportingFilesToGenerate>
                    <generatorName>spring</generatorName>
                    <invokerPackage>${project.groupId}.customer</invokerPackage>
                    <apiPackage>${project.groupId}.customer.api</apiPackage>
                    <modelPackage>${project.groupId}.customer.web</modelPackage>
                    <configOptions>
                        <openApiNullable>false</openApiNullable>
                        <hideGenerationTimestamp>true</hideGenerationTimestamp>
                        <serializableModel>true</serializableModel>
                        <interfaceOnly>true</interfaceOnly>
                        <basePackage>${project.groupId}.customer</basePackage>
                    </configOptions>
                </configuration>
                <executions>
                    <execution>
                        <id>openapi-generate-sources</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <annotationProcessorPaths>
                        <path>
                            <groupId>org.projectlombok</groupId>
                            <artifactId>lombok</artifactId>
                            <version>${lombok.version}</version>
                        </path>
                        <path>
                            <groupId>org.projectlombok</groupId>
                            <artifactId>lombok-mapstruct-binding</artifactId>
                            <version>${lombok-mapstruct-binding.version}</version>
                        </path>
                        <path>
                            <groupId>org.mapstruct</groupId>
                            <artifactId>mapstruct-processor</artifactId>
                            <version>${org.mapstruct.version}</version>
                        </path>
                        <!-- For JPA static metamodel generation -->
                    </annotationProcessorPaths>
                    <!-- due to problem in maven-compiler-plugin, for verbose mode add showWarnings -->
                    <compilerArgs>
                        <compilerArg>
                            -Amapstruct.verbose=true
                        </compilerArg>
                        <compilerArg>
                            -Amapstruct.suppressGeneratorVersionInfoComment=true
                        </compilerArg>
                        <compilerArg>
                            -Amapstruct.suppressGeneratorTimestamp=true
                        </compilerArg>
                        <compilerArg>
                            -Amapstruct.defaultComponentModel=spring
                        </compilerArg>
                    </compilerArgs>
                    <source>9</source>
                    <target>9</target>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>build-helper-maven-plugin</artifactId>
                <executions>
                    <!-- States that the plugin's add-test-source goal is executed at generate-test-sources phase. -->
                    <execution>
                        <id>add-karate-sources</id>
                        <phase>generate-test-sources</phase>
                        <goals>
                            <goal>add-test-source</goal>
                        </goals>
                        <configuration>
                            <!-- Configures the source directory of integration tests. -->
                            <sources>
                                <source>src/test-karate/java</source>
                            </sources>
                        </configuration>
                    </execution>
                    <execution>
                        <id>add-karate-resources</id>
                        <phase>generate-test-resources</phase>
                        <goals>
                            <goal>add-test-resource</goal>
                        </goals>
                        <configuration>
                            <resources>
                                <resource>
                                    <filtering>false</filtering>
                                    <directory>src/test-karate/resources</directory>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <!-- external test & code analysis/coverage report plugins -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-checkstyle-plugin</artifactId>
                <version>${maven-checkstyle-plugin.version}</version>
                <dependencies>
                    <dependency>
                        <groupId>com.puppycrawl.tools</groupId>
                        <artifactId>checkstyle</artifactId>
                        <version>${com.puppycrawl.tools.version}</version>
                    </dependency>
                </dependencies>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-pmd-plugin</artifactId>
                <version>${maven-pmd-plugin.version}</version>
                <configuration>
                    <linkXRef>false</linkXRef>
                </configuration>
                <dependencies>
                    <dependency>
                        <groupId>net.sourceforge.pmd</groupId>
                        <artifactId>pmd-core</artifactId>
                        <version>${net.sourceforge.pmd.version}</version>
                    </dependency>
                    <dependency>
                        <groupId>net.sourceforge.pmd</groupId>
                        <artifactId>pmd-java</artifactId>
                        <version>${net.sourceforge.pmd.version}</version>
                    </dependency>
                </dependencies>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>findbugs-maven-plugin</artifactId>
                <version>${findbugs-maven-plugin.version}</version>
            </plugin>
            <plugin>
                <groupId>org.sonarsource.scanner.maven</groupId>
                <artifactId>sonar-maven-plugin</artifactId>
                <version>${sonar-maven-plugin.version}</version>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-failsafe-plugin</artifactId>
                <configuration>
                    <excludes>
                        <exclude>**/*Tests</exclude>
                        <exclude>**/*Test</exclude>
                        <exclude>**/*RunnerIT</exclude>
                    </excludes>
                </configuration>
            </plugin>
            <plugin>
                <groupId>com.bazaarvoice.maven.plugins</groupId>
                <artifactId>process-exec-maven-plugin</artifactId>
                <version>${process-exec-maven-plugin.version}</version>
            </plugin>
        </plugins>

        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>com.bazaarvoice.maven.plugins</groupId>
                    <artifactId>process-exec-maven-plugin</artifactId>
                    <configuration>
                        <name>${account-demo-stub.artifact.id}</name>
                        <waitForInterrupt>false</waitForInterrupt>
                        <healthcheckUrl>
                            ${account-demo-stub.health-check.url}
                        </healthcheckUrl>
                        <arguments>
                            <argument>java</argument>
                            <argument>-jar</argument>
                            <argument>-Dserver.port=${account-demo-stub.server.port}</argument>
                            <argument>${account-demo-stub.artifact.systemPath}</argument>
                            <argument>--mapping.source.type=java</argument>
                        </arguments>
                        <skip>${maven.it.skip}</skip>
                    </configuration>
                    <executions>
                        <execution>
                            <id>start-service</id>
                            <phase>pre-integration-test</phase>
                            <goals>
                                <goal>start</goal>
                            </goals>
                        </execution>
                        <execution>
                            <id>stop-service</id>
                            <phase>install</phase>
                            <goals>
                                <goal>stop-all</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <groupId>net.masterthought</groupId>
                    <artifactId>maven-cucumber-reporting</artifactId>
                    <configuration>
                        <checkBuildResult>true</checkBuildResult>
                        <skip>${maven.test.skip}</skip>
                        <skipEmptyJSONFiles>false</skipEmptyJSONFiles>
                        <inputDirectory>${project.build.directory}</inputDirectory>
                        <outputDirectory>${project.build.directory}</outputDirectory>
                        <jsonFiles>
                            <jsonFile>cucumber-html-reports/json/cucumber.json</jsonFile>
                        </jsonFiles>
                    </configuration>
                    <executions>
                        <execution>
                            <id>cucumber-reporting-generate</id>
                            <phase>verify</phase>
                            <goals>
                                <goal>generate</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <groupId>org.jacoco</groupId>
                    <artifactId>jacoco-maven-plugin</artifactId>
                    <version>${jacoco-maven-plugin.version}</version>
                    <configuration>
                        <rules>
                            <rule>
                                <element>BUNDLE</element>
                                <limits>
                                    <limit>
                                        <counter>INSTRUCTION</counter>
                                        <value>COVEREDRATIO</value>
                                        <minimum>0.0</minimum>
                                    </limit>
                                    <limit>
                                        <counter>CLASS</counter>
                                        <value>MISSEDCOUNT</value>
                                        <maximum>100</maximum>
                                    </limit>
                                </limits>
                            </rule>
                            <rule>
                                <element>METHOD</element>
                                <limits>
                                    <limit>
                                        <counter>COMPLEXITY</counter>
                                        <value>COVEREDRATIO</value>
                                        <minimum>0%</minimum>
                                    </limit>
                                    <limit>
                                        <counter>LINE</counter>
                                        <value>COVEREDRATIO</value>
                                        <minimum>0%</minimum>
                                    </limit>
                                </limits>
                            </rule>
                            <rule>
                                <element>CLASS</element>
                                <excludes>
                                    <exclude>*Application</exclude>
                                </excludes>
                                <limits>
                                    <limit>
                                        <counter>LINE</counter>
                                        <value>COVEREDRATIO</value>
                                        <minimum>0%</minimum>
                                    </limit>
                                    <limit>
                                        <counter>METHOD</counter>
                                        <value>COVEREDRATIO</value>
                                        <minimum>0%</minimum>
                                    </limit>
                                </limits>
                            </rule>
                            <rule>
                                <element>PACKAGE</element>
                                <limits>
                                    <limit>
                                        <counter>CLASS</counter>
                                        <value>COVEREDRATIO</value>
                                        <minimum>0%</minimum>
                                    </limit>
                                </limits>
                            </rule>
                        </rules>
                    </configuration>
                    <executions>
                        <execution>
                            <id>default-prepare-agent</id>
                            <goals>
                                <goal>prepare-agent</goal>
                            </goals>
                        </execution>
                        <execution>
                            <id>default-prepare-agent-integration</id>
                            <goals>
                                <goal>prepare-agent-integration</goal>
                            </goals>
                        </execution>
                        <execution>
                            <id>default-report</id>
                            <goals>
                                <goal>report</goal>
                            </goals>
                        </execution>
                        <execution>
                            <id>default-report-integration</id>
                            <goals>
                                <goal>report-integration</goal>
                            </goals>
                        </execution>
                        <execution>
                            <id>default-check</id>
                            <goals>
                                <goal>check</goal>
                            </goals>
                        </execution>
                        <execution>
                            <id>jacoco-report</id>
                            <phase>verify</phase>
                            <goals>
                                <goal>report</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <groupId>org.pitest</groupId>
                    <artifactId>pitest-maven</artifactId>
                    <configuration>
                        <targetClasses>
                            <param>com.example.demo.services.customer.*</param>
                        </targetClasses>
                        <targetTests>
                            <param>com.example.demo.services.customer.*</param>
                        </targetTests>
                        <excludedClasses>
                            <class>com.example.demo.services.customer.accounts.*</class>
                            <class>com.example.demo.services.customer.addresses.*</class>
                            <class>com.example.demo.services.customer.exception.*</class>
                            <class>com.example.demo.services.customer.persistence.repository.*</class>
                            <class>com.example.demo.services.customer.util.*</class>
                            <class>com.example.demo.services.customer.web.assembler.*</class>
                            <class>com.example.demo.services.customer.web.security.*</class>
                            <class>com.example.demo.services.customer.webclient.*</class>
                            <class>com.example.demo.services.customer.wsclient.*</class>
                            <class>
                                com.example.demo.services.customer.web.security.WebSecurityConfig
                            </class>
                        </excludedClasses>
                        <excludedTestClasses>
                            <excludedTestClass>
                                CustomerParallelRunnerIT
                            </excludedTestClass>
                        </excludedTestClasses>
                        <threads>2</threads>
                        <timestampedReports>false</timestampedReports>
                        <timeoutConstant>8000</timeoutConstant>
                        <failWhenNoMutations>false</failWhenNoMutations>
                        <mutationThreshold>35</mutationThreshold>
                        <skip>${pitest.skip}</skip>
                    </configuration>
                    <executions>
                        <execution>
                            <phase>verify</phase>
                            <goals>
                                <goal>mutationCoverage</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
            </plugins>
        </pluginManagement>
    </build>

    <reporting>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-checkstyle-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-pmd-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>findbugs-maven-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.pitest</groupId>
                <artifactId>pitest-maven</artifactId>
            </plugin>
        </plugins>
    </reporting>

    <profiles>
        <profile>
            <id>java11</id>
            <activation>
                <jdk>[11,)</jdk>
            </activation>
            <dependencies>
                <dependency>
                    <groupId>org.glassfish.jaxb</groupId>
                    <artifactId>jaxb-runtime</artifactId>
                </dependency>
            </dependencies>
        </profile>
        <profile>
            <id>karate-test</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-failsafe-plugin</artifactId>
                        <configuration>
                            <includes>
                                <include>
                                    com.example.demo.services.customer.karate.CustomerParallelRunnerIT
                                </include>
                            </includes>
                        </configuration>
                    </plugin>
                    <plugin>
                        <groupId>net.masterthought</groupId>
                        <artifactId>maven-cucumber-reporting</artifactId>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>jacoco</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.jacoco</groupId>
                        <artifactId>jacoco-maven-plugin</artifactId>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>pitest</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.pitest</groupId>
                        <artifactId>pitest-maven</artifactId>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>

</project>
